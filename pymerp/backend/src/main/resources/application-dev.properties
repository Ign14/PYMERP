# application-dev.properties

server.port=8081

spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:55432}/${POSTGRES_DB:pymes}
spring.datasource.username=${POSTGRES_USER:pymes}
spring.datasource.password=${POSTGRES_PASSWORD:pymes}
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true

spring.flyway.url=${spring.datasource.url}
# Run Flyway migrations as the DB owner so extensions and schema creation succeed
# Use the 'pymes' superuser created by docker-compose
spring.flyway.user=${POSTGRES_MIGRATION_USER:${POSTGRES_USER:pymes}}
spring.flyway.password=${POSTGRES_MIGRATION_PASSWORD:${POSTGRES_PASSWORD:pymes}}

spring.redis.host=${REDIS_HOST:localhost}
spring.redis.port=${REDIS_PORT:6379}

# Disable the Redis health indicator in local development so the health endpoint
# reports UP even when no Redis instance is running.
management.health.redis.enabled=false

management.endpoints.web.base-path=/actuator
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always

app.cors.allowed-origins[0]=http://localhost:5173
app.cors.allowed-origins[1]=http://localhost:5174
app.cors.allowed-origin-patterns[0]=http://localhost:*
app.cors.allowed-origin-patterns[1]=http://127.0.0.1:*
app.cors.allowed-origin-patterns[2]=http://0.0.0.0:*
app.security.jwt.secret=dev-secret-change-me-please-32chars-min
app.security.jwt.expiration-seconds=86400
app.security.jwt.refresh-expiration-seconds=2592000
# OIDC / OAuth2 Resource Server (Keycloak / Auth0) - example settings for development
# Set to true to enable oauth2 resource server mode (validate tokens against JWK set)
app.security.jwt.oidc-enabled=false
# Example JWK set URL (Keycloak or Auth0). Replace with your identity provider URL when enabling.
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://YOUR-ISSUER/.well-known/jwks.json

app.server.port-fallback.enabled=true
app.server.port-fallback.starting-port=0
